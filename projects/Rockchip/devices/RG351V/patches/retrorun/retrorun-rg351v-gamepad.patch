diff --git a/src/input.cpp b/src/input.cpp
index aa7d107..8900a02 100644
--- a/src/input.cpp
+++ b/src/input.cpp
@@ -41,7 +41,7 @@ static go2_input_state_t* prevGamepadState;
 static go2_input_t* input;
 static bool has_triggers = false;
 
-static constexpr go2_input_button_t Hotkey = Go2InputButton_F2;
+static constexpr go2_input_button_t Hotkey = Go2InputButton_ThumbRight;
 
 
 void input_gamepad_read()
@@ -86,8 +86,8 @@ void core_input_poll(void)
 	input_gamepad_read();
     go2_input_battery_read(input, &batteryState);
 
-    if (go2_input_state_button_get(gamepadState, Go2InputButton_F1) == ButtonState_Pressed &&
-        go2_input_state_button_get(gamepadState, Go2InputButton_F6) == ButtonState_Pressed)
+    if (go2_input_state_button_get(gamepadState, Hotkey) == ButtonState_Pressed &&
+        go2_input_state_button_get(gamepadState, Go2InputButton_Start) == ButtonState_Pressed)
     {
         input_exit_requested = true;
     }
@@ -133,8 +133,8 @@ int16_t core_input_state(unsigned port, unsigned device, unsigned index, unsigne
     // if (port || index || device != RETRO_DEVICE_JOYPAD)
     //         return 0;
 
-    if (go2_input_state_button_get(gamepadState, Hotkey) == ButtonState_Pressed)
-        return 0;
+    //if (go2_input_state_button_get(gamepadState, Hotkey) == ButtonState_Pressed)
+    //    return 0;
 
     if (!Retrorun_UseAnalogStick)
     {
@@ -183,11 +183,11 @@ int16_t core_input_state(unsigned port, unsigned device, unsigned index, unsigne
                     break;
 
                 case RETRO_DEVICE_ID_JOYPAD_SELECT:
-                    return go2_input_state_button_get(gamepadState, Go2InputButton_F1);
+                    return go2_input_state_button_get(gamepadState, Go2InputButton_Select);
                     break;
 
                 case RETRO_DEVICE_ID_JOYPAD_START:
-                    return go2_input_state_button_get(gamepadState, Go2InputButton_F6);
+                    return go2_input_state_button_get(gamepadState, Go2InputButton_Start);
                     break;
 
                 case RETRO_DEVICE_ID_JOYPAD_UP:
@@ -215,51 +215,27 @@ int16_t core_input_state(unsigned port, unsigned device, unsigned index, unsigne
                     break;
 
                 case RETRO_DEVICE_ID_JOYPAD_L:
-                    if (has_triggers)
-                    {
-                        return go2_input_state_button_get(gamepadState, Go2InputButton_TopLeft);
-                    }
-                    else
-                    {
-                        return opt_triggers ? go2_input_state_button_get(gamepadState, Go2InputButton_F5) :
-                            go2_input_state_button_get(gamepadState, Go2InputButton_TopLeft);
-                    }
+                    return go2_input_state_button_get(gamepadState, Go2InputButton_TopLeft);
                     break;
 
                 case RETRO_DEVICE_ID_JOYPAD_R:
-                    if (has_triggers)
-                    {
-                        return go2_input_state_button_get(gamepadState, Go2InputButton_TopRight);
-                    }
-                    else
-                    {
-                        return opt_triggers ? go2_input_state_button_get(gamepadState, Go2InputButton_F6) :
-                            go2_input_state_button_get(gamepadState, Go2InputButton_TopRight);
-                    }
+                    return go2_input_state_button_get(gamepadState, Go2InputButton_TopRight);
                     break;
 
                 case RETRO_DEVICE_ID_JOYPAD_L2:
-                    if (has_triggers)
-                    {
-                        return go2_input_state_button_get(gamepadState, Go2InputButton_TriggerLeft);
-                    }
-                    else
-                    {
-                        return opt_triggers ? go2_input_state_button_get(gamepadState, Go2InputButton_TopLeft) :
-                            go2_input_state_button_get(gamepadState, Go2InputButton_F5);
-                    }
+                    return go2_input_state_button_get(gamepadState, Go2InputButton_TriggerLeft);
                     break;
 
                 case RETRO_DEVICE_ID_JOYPAD_R2:
-                    if (has_triggers)
-                    {
-                        return go2_input_state_button_get(gamepadState, Go2InputButton_TriggerRight);
-                    }
-                    else
-                    {
-                        return opt_triggers ? go2_input_state_button_get(gamepadState, Go2InputButton_TopRight) :
-                            go2_input_state_button_get(gamepadState, Go2InputButton_F6);
-                    }
+                    return go2_input_state_button_get(gamepadState, Go2InputButton_TriggerRight);
+                    break;
+
+                case RETRO_DEVICE_ID_JOYPAD_L3:
+                    return go2_input_state_button_get(gamepadState, Go2InputButton_ThumbLeft);
+                    break;
+
+                case RETRO_DEVICE_ID_JOYPAD_R3:
+                    return go2_input_state_button_get(gamepadState, Go2InputButton_ThumbRight);
                     break;
 
                 default:
@@ -267,9 +243,11 @@ int16_t core_input_state(unsigned port, unsigned device, unsigned index, unsigne
                     break;
             }
         }
-        else if (Retrorun_UseAnalogStick && device == RETRO_DEVICE_ANALOG && index == RETRO_DEVICE_INDEX_ANALOG_LEFT)
+        else if (Retrorun_UseAnalogStick && device == RETRO_DEVICE_ANALOG)
         {
-            go2_thumb_t thumb = go2_input_state_thumbstick_get(gamepadState, Go2InputThumbstick_Left);
+			go2_input_thumbstick_t thumbstick = Go2InputThumbstick_Left;
+			if (index == RETRO_DEVICE_INDEX_ANALOG_RIGHT) thumbstick = Go2InputThumbstick_Right;
+            go2_thumb_t thumb = go2_input_state_thumbstick_get(gamepadState, thumbstick);
 
             if (thumb.x > 1.0f)
                 thumb.x = 1.0f;
@@ -287,7 +265,7 @@ int16_t core_input_state(unsigned port, unsigned device, unsigned index, unsigne
                     return thumb.x * 0x7fff;
                     break;
                 
-                case RETRO_DEVICE_ID_JOYPAD_Y:
+                case RETRO_DEVICE_ID_ANALOG_Y:
                     return thumb.y * 0x7fff;
                     break;
                     
diff --git a/src/main.cpp b/src/main.cpp
index 64ff933..1d71524 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -879,9 +879,9 @@ int main(int argc, char *argv[])
     input_gamepad_read();
     
     go2_input_state_t* gamepadState =input_gampad_current_get();
-    if (go2_input_state_button_get(gamepadState, Go2InputButton_F1) == ButtonState_Pressed)
+    if (go2_input_state_button_get(gamepadState, Go2InputButton_Select) == ButtonState_Pressed)
     {
-        printf("Forcing restart due to button press (F1).\n");
+        printf("Forcing restart due to button press (Select).\n");
         opt_restart = true;
     }
    
diff --git a/src/video.cpp b/src/video.cpp
index f8351a4..b99b3ba 100644
--- a/src/video.cpp
+++ b/src/video.cpp
@@ -293,7 +293,7 @@ void core_video_refresh(const void * data, unsigned width, unsigned height, size
                     gles_surface,
                     0, ss_h - height, width, height,
                     y, x, h, w,
-                    GO2_ROTATION_DEGREES_270);
+                    GO2_ROTATION_DEGREES_0);	// RG351V
 
         go2_context_surface_unlock(context3D, gles_surface);
  #else
@@ -376,6 +376,6 @@ void core_video_refresh(const void * data, unsigned width, unsigned height, size
                            surface,
                            0, 0, width, height,
                            y, x, h, w,
-                           GO2_ROTATION_DEGREES_270);
+                           GO2_ROTATION_DEGREES_0);	// RG351V
     }
 }
